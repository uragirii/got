package commit_test

import (
	"bytes"
	"testing"
	"testing/fstest"

	"github.com/uragirii/got/internals/git/commit"
	"github.com/uragirii/got/internals/git/object"
	"github.com/uragirii/got/internals/git/sha"
)

const TEST_COMMIT_STR = `tree 011bf1e3d368c58d3fd7ea584d69a9acb6b21c13
parent 14201e266991676173cbd041257cf1a0d8ff3a3a
author Apoorv Kansal <apoorvkansalak@gmail.com> 1720643686 +0530
committer Apoorv Kansal <apoorvkansalak@gmail.com> 1720643686 +0530

feat: add support for rudimentary git add
`

const DATA_SHA_STR = "52c377158a8dd24e5b60908a962e73ce88288920"

var DATA_COMPRESSED_BYTES = []byte{0x78, 0x9c, 0xa4, 0xce, 0x41, 0x4a, 0x04, 0x31, 0x10, 0x85, 0x61, 0xd7, 0x39, 0x45, 0xed, 0x05,
	0x49, 0x25, 0xdd, 0x95, 0xb4, 0x88, 0xe8, 0xda, 0x53, 0x54, 0xa7, 0x2a, 0x63, 0x33, 0x93, 0x49,
	0x93, 0xa9, 0x16, 0xbc, 0xbd, 0x38, 0x1e, 0xc1, 0xe5, 0xc7, 0x83, 0xc7, 0x5f, 0x7a, 0x6b, 0x9b,
	0x41, 0x48, 0xfe, 0xc1, 0x86, 0x2a, 0x78, 0xc4, 0xb5, 0xa2, 0x46, 0x89, 0x94, 0xcb, 0x9c, 0x25,
	0x56, 0x49, 0xca, 0x73, 0x9e, 0x84, 0x16, 0x5e, 0xb8, 0xac, 0xb4, 0x06, 0x2c, 0x18, 0xdd, 0xce,
	0x43, 0xaf, 0x06, 0x38, 0x05, 0x8f, 0x1a, 0x88, 0x96, 0x05, 0x29, 0x11, 0xa6, 0x58, 0x56, 0xf1,
	0x13, 0x86, 0x39, 0x95, 0x8a, 0xec, 0x25, 0xd7, 0x1a, 0x39, 0xb2, 0xe3, 0xc3, 0x3e, 0xfb, 0x80,
	0xf7, 0xbd, 0xf7, 0xf1, 0x05, 0x1f, 0x7c, 0xbd, 0xf1, 0x05, 0x5e, 0xf8, 0xce, 0xf3, 0x5d, 0x7c,
	0x7e, 0x3b, 0x35, 0xde, 0x2e, 0x4f, 0xa5, 0xb7, 0x57, 0xc0, 0x14, 0x3c, 0x4d, 0x91, 0x32, 0xc1,
	0xa3, 0x9f, 0xa3, 0x77, 0x7f, 0xa5, 0xa6, 0xff, 0xf9, 0x70, 0x55, 0xd9, 0x9e, 0x81, 0x45, 0xe0,
	0x76, 0xec, 0x7b, 0x1f, 0x06, 0xb5, 0x0f, 0x18, 0x87, 0x6c, 0x4d, 0xaf, 0xc6, 0xe3, 0x1b, 0x4e,
	0x9b, 0xfd, 0xee, 0xee, 0x27, 0x00, 0x00, 0xff, 0xff, 0x30, 0x8f, 0x58, 0x41}

var TREE_COMPRESSED_BYTES = []byte{0x78, 0x01, 0x2b, 0x29, 0x4a, 0x4d, 0x55, 0x30, 0x32, 0xb7, 0x60, 0x30, 0x34, 0x30, 0x30, 0x33,
	0x31, 0x51, 0xd0, 0x4b, 0xcf, 0x2c, 0xc9, 0x4c, 0xcf, 0xcb, 0x2f, 0x4a, 0x65, 0x48, 0x33, 0x88,
	0x0f, 0x48, 0x35, 0x70, 0xc8, 0x3d, 0xed, 0x7d, 0x75, 0x7f, 0xa8, 0xc9, 0x01, 0xee, 0xbd, 0x9b,
	0x4f, 0x9b, 0x42, 0x55, 0xf9, 0x26, 0x66, 0xa7, 0xa6, 0x65, 0xe6, 0xa4, 0x32, 0xec, 0xef, 0x75,
	0x2c, 0x3a, 0xa3, 0xca, 0x99, 0x76, 0x3d, 0xd8, 0xfc, 0x3a, 0x7b, 0xb0, 0x9d, 0x7c, 0x97, 0xf5,
	0xdc, 0x4b, 0x50, 0x35, 0x41, 0xa9, 0x89, 0x29, 0xb9, 0xa9, 0x7a, 0xb9, 0x29, 0x0c, 0xdf, 0x56,
	0xb3, 0xab, 0xfa, 0xec, 0xbf, 0xa1, 0xf0, 0x56, 0xf1, 0x4b, 0xf4, 0x37, 0xb7, 0x43, 0x1a, 0xec,
	0x17, 0xae, 0xf1, 0x9b, 0x18, 0x00, 0x81, 0x42, 0x32, 0x50, 0xf6, 0xd8, 0x8d, 0xcc, 0xe0, 0x68,
	0xe5, 0x15, 0x96, 0x8e, 0xb7, 0x72, 0x75, 0xdf, 0xfe, 0xc9, 0xd4, 0x9c, 0xf6, 0xf3, 0x93, 0x1f,
	0xd4, 0x88, 0xf4, 0x7c, 0xbd, 0xdc, 0xfc, 0x14, 0x06, 0xd3, 0xaf, 0x93, 0x3b, 0xfe, 0xa6, 0x9e,
	0xf1, 0x9a, 0x5c, 0xcf, 0x7d, 0x6b, 0x2a, 0xa7, 0xde, 0x1d, 0x9b, 0x48, 0xa7, 0x64, 0x88, 0xfe,
	0xcc, 0xbc, 0x92, 0xd4, 0xa2, 0xbc, 0xc4, 0x9c, 0x62, 0x86, 0x9a, 0x6b, 0x4f, 0x23, 0xd6, 0xef,
	0xdc, 0xe6, 0xcf, 0xa4, 0xf2, 0xff, 0xb9, 0xc9, 0x3b, 0x89, 0x35, 0x77, 0xaf, 0x5a, 0x39, 0x40,
	0x4d, 0xc9, 0x4d, 0xcc, 0xcc, 0xd3, 0x4b, 0xcf, 0x67, 0xe8, 0xe9, 0x5a, 0xf3, 0xae, 0xe2, 0x58,
	0xf7, 0xfb, 0x77, 0x17, 0x8d, 0xdf, 0x6f, 0x9f, 0xf4, 0x40, 0x4f, 0x3a, 0xe6, 0x6f, 0x33, 0xc4,
	0x98, 0x92, 0xd4, 0xe2, 0x92, 0x62, 0x06, 0x9d, 0x9d, 0xe9, 0x1b, 0x1c, 0x4a, 0x37, 0xdf, 0x9b,
	0xd3, 0xad, 0x5b, 0x78, 0xc0, 0x6f, 0xea, 0xb1, 0xf7, 0x47, 0x8e, 0x71, 0x02, 0x00, 0x52, 0x4a,
	0x75, 0x35}

func TestCommit(t *testing.T) {

	t.Run("parses the commit correctly from SHA", func(t *testing.T) {
		t.Setenv("GIT_DIR", ".git")

		objSha, _ := sha.FromString(DATA_SHA_STR)

		mapFs := fstest.MapFS{
			"objects/01/1bf1e3d368c58d3fd7ea584d69a9acb6b21c13": {Data: TREE_COMPRESSED_BYTES},
		}

		objPath, _ := objSha.GetObjPath()

		mapFs[objPath] = &fstest.MapFile{Data: DATA_COMPRESSED_BYTES}

		fs := fstest.MapFS(mapFs)

		commit, err := commit.FromSHA(objSha, fs)

		if err != nil {
			t.Error(err)
		}

		if !commit.GetSHA().Eq(objSha) {
			t.Errorf("expected the sha to be %s but got %s", DATA_SHA_STR, commit.GetSHA())
		}

		if commit.String() != TEST_COMMIT_STR {
			t.Errorf("expected string to be %s but got %s", TEST_COMMIT_STR, commit.String())
		}

		if commit.Raw() != TEST_COMMIT_STR {
			t.Errorf("expected raw string to be `%s` but got `%s`", TEST_COMMIT_STR, commit.String())
		}

		if commit.GetObjType() != object.CommitObj {
			t.Errorf("expected object type to be %s but got %s", object.CommitObj, commit.GetObjType())
		}
		var buffer bytes.Buffer

		commit.Write(&buffer)

		compressedBytes := buffer.Bytes()

		if !bytes.Equal(compressedBytes, DATA_COMPRESSED_BYTES) {
			t.Errorf("expected the raw to be \n% x\n\n but got \n%x", DATA_COMPRESSED_BYTES, compressedBytes)
		}

	})
}
